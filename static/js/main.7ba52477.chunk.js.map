{"version":3,"sources":["components/meal/renderMisc.js","components/meal/ingredientsList.js","components/meal/meal.jsx","index.js"],"names":["RenderMisc","miscName","value","title","className","width","height","src","ingredientsList","meal","items","i","push","map","item","toString","Meal","props","state","idMeal","strMeal","strInstructions","strMealThumb","strIngredients","strCategory","strArea","strTags","strYoutube","strSource","onClick","fetchData","id","this","alt","serverUrl","fetch","then","resp","json","data","createMeal","meals","catch","e","console","error","setState","slice","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ba52477.chunk.js","sourcesContent":["import React from \"react\";\r\nexport const RenderMisc = ({ miscName, value, title }) => {\r\n  if (!value) return \"\";\r\n  switch (miscName) {\r\n    case \"strYoutube\":\r\n      value = \"https://www.youtube.com/embed/\" + value;\r\n      return (\r\n        <div className=\"column left\">\r\n          <h5>Video Recipe</h5>\r\n          <div className=\"videoWrapper\">\r\n            <iframe title={title} width=\"420\" height=\"315\" src={value}></iframe>\r\n          </div>\r\n        </div>\r\n      );\r\n    default:\r\n      return (\r\n        <p>\r\n          <span className=\"bold\">{miscName}: </span>\r\n          {value}\r\n        </p>\r\n      );\r\n  }\r\n};\r\n","export const ingredientsList = (meal) => {\r\n  const items = [];\r\n  for (let i = 1; i <= 20; i++) {\r\n    if (meal[`strIngredient${i}`]) {\r\n      items.push(meal[`strIngredient${i}`] + \" - \" + meal[`strMeasure${i}`]);\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return items.map((item) => <li key={item.toString()}>{item}</li>);\r\n};\r\n","import React from \"react\";\r\nimport { RenderMisc } from \"./renderMisc\";\r\nimport { ingredientsList } from \"./ingredientsList\";\r\nimport \"./meal.scss\";\r\n\r\nexport class Meal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idMeal: null,\r\n      strMeal: null,\r\n      strInstructions: null,\r\n      strMealThumb: null,\r\n      strIngredients: null,\r\n      strCategory: null,\r\n      strArea: null,\r\n      strTags: null,\r\n      strYoutube: null,\r\n      strSource: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"text-center\">\r\n          <h3>Feeling hungry?</h3>\r\n          <h5>Get a random meal by clicking below</h5>\r\n          <button className=\"button-primary\" onClick={() => this.fetchData()}>\r\n            Get Meal üçî\r\n          </button>\r\n        </div>\r\n        <div className=\"meal\" id={this.state.idMeal}>\r\n          <div className=\"meal__row\">\r\n            <div className=\"meal__column left\">\r\n              <img src={this.state.strMealThumb} alt={this.state.strMeal} />\r\n              <RenderMisc\r\n                miscName={\"Category\"}\r\n                value={this.state.strCategory}\r\n              />\r\n              <RenderMisc miscName={\"Area\"} value={this.state.strArea} />\r\n              <RenderMisc miscName={\"Tags\"} value={this.state.strTags} />\r\n              <ul className=\"meal__ingredients\">{this.state.strIngredients}</ul>\r\n            </div>\r\n            <div className=\"meal__column\">\r\n              <h4>{this.state.strMeal}</h4>\r\n              <p>{this.state.strInstructions}</p>\r\n            </div>\r\n          </div>\r\n          <RenderMisc\r\n            miscName={\"strYoutube\"}\r\n            value={this.state.strYoutube}\r\n            title={this.state.strMeal}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  fetchData() {\r\n    if (this.props.serverUrl) {\r\n      fetch(this.props.serverUrl)\r\n        .then((resp) => {\r\n          return resp.json();\r\n        })\r\n        .then((data) => {\r\n          this.createMeal(data.meals[0]);\r\n        })\r\n        .catch((e) => {\r\n          console.error(e);\r\n        });\r\n    } else {\r\n      console.error(\"Server Url is not set!\");\r\n    }\r\n  }\r\n\r\n  createMeal(meal) {\r\n    this.setState({ idMeal: meal.idMeal });\r\n    this.setState({ strMeal: meal.strMeal });\r\n    this.setState({ strInstructions: meal.strInstructions });\r\n    this.setState({ strMealThumb: meal.strMealThumb });\r\n    this.setState({ strIngredients: ingredientsList(meal) });\r\n    this.setState({ strCategory: meal.strCategory });\r\n    this.setState({ strArea: meal.strArea });\r\n    this.setState({ strTags: meal.strTags });\r\n    this.setState({ strYoutube: meal.strYoutube.slice(-11) });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Meal } from \"./components/meal/meal\";\nimport \"./base.scss\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <Meal serverUrl=\"https://www.themealdb.com/api/json/v1/1/random.php\" />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}